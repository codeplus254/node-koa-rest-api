{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/master/challenge-rest-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/master/challenge-rest-api\",\"filename\":\"/home/master/challenge-rest-api/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/master/challenge-rest-api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/master/challenge-rest-api",
      "filename": "/home/master/challenge-rest-api/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/master/challenge-rest-api",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/master/challenge-rest-api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/master/challenge-rest-api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/master/challenge-rest-api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _koa = _interopRequireDefault(require(\"koa\"));\n\nvar _koaRouter = _interopRequireDefault(require(\"koa-router\"));\n\nvar _koaBodyparser = _interopRequireDefault(require(\"koa-bodyparser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = new _koa.default();\nconst PORT = process.env.PORT || 1337;\nconst router = new _koaRouter.default();\n\nconst API = require('./controller');\n\nrouter.use((0, _koaBodyparser.default)()).get('/', (ctx, next) => {\n  ctx.body = 'Hello, welcome to the Polycade API';\n  ctx.status = 200;\n}).get('/pricing-models', async (ctx, next) => {\n  const pricingModels = await new API().getPricingModels();\n  ctx.status = 200;\n  ctx.body = pricingModels;\n}).post('/pricing-models', async (ctx, next) => {\n  const pricingModel = ctx.request.body;\n\n  try {\n    const response = await new API().createPricingModel(pricingModel);\n    ctx.body = response;\n    ctx.status = 201;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).get('/pricing-models/:pricingModelID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const pricingModel = await new API().getPricingModel(pricingModelID);\n    ctx.body = pricingModel;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 404;\n  }\n}).put('/pricing-models/:pricingModelID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const pricingModelChanges = ctx.request.body;\n\n  try {\n    const pricingModel = await new API().updatePricingModel(pricingModelID, pricingModelChanges);\n    ctx.body = pricingModel;\n    ctx.status = 202;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).get('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const prices = await new API().getPricesForPricingModel(pricingModelID);\n    ctx.body = prices;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 404;\n  }\n}).post('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const newPrice = ctx.request.body;\n\n  try {\n    const response = await new API().createPricingForPricingModel(pricingModelID, newPrice);\n    ctx.body = response;\n    ctx.status = 201;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).del('/pricing-models/:pricingModelID/prices/:priceID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const pricingID = ctx.params.priceID;\n\n  try {\n    const response = await new API().deletePricingFromPricingModel(pricingModelID, pricingID);\n    ctx.body = response;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).get('/machines/:machineID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n\n  try {\n    const response = await new API().getMachine(machineID);\n    ctx.body = response;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 404;\n  }\n}).put('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const response = await new API().setPricingForMachine(machineID, pricingModelID);\n    ctx.body = response;\n    ctx.status = 202;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).del('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const response = await new API().unsetPricingForMachine(machineID, pricingModelID);\n    ctx.body = response;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 400;\n  }\n}).get('/machines/:machineID/prices', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n\n  try {\n    const response = await new API().getPricingModelForMachine(machineID);\n    ctx.body = response;\n    ctx.status = 200;\n  } catch (err) {\n    ctx.body = err;\n    ctx.status = 404;\n  }\n});\nconst server = app.use(router.routes()).listen(PORT, () => console.log(`Server listening on port ${PORT}`));\nmodule.exports = server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "Koa",
        "PORT",
        "process",
        "env",
        "router",
        "Router",
        "API",
        "require",
        "use",
        "get",
        "ctx",
        "next",
        "body",
        "status",
        "pricingModels",
        "getPricingModels",
        "post",
        "pricingModel",
        "request",
        "response",
        "createPricingModel",
        "err",
        "pricingModelID",
        "params",
        "getPricingModel",
        "put",
        "pricingModelChanges",
        "updatePricingModel",
        "prices",
        "getPricesForPricingModel",
        "newPrice",
        "createPricingForPricingModel",
        "del",
        "pricingID",
        "priceID",
        "deletePricingFromPricingModel",
        "machineID",
        "getMachine",
        "setPricingForMachine",
        "unsetPricingForMachine",
        "getPricingModelForMachine",
        "server",
        "routes",
        "listen",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "sourcesContent": [
        "import Koa from 'koa';\nimport Router from 'koa-router';\nimport bodyParser from 'koa-bodyparser';\n\nconst app = new Koa();\nconst PORT = process.env.PORT || 1337;\nconst router = new Router();\nconst API = require('./controller');\n\nrouter\n\t.use(bodyParser())\n\t.get('/', (ctx, next) => {\n\t\tctx.body = 'Hello, welcome to the Polycade API';\n\t\tctx.status = 200;\n\t})\n\t.get('/pricing-models', async (ctx, next) => {\n\n\t\tconst pricingModels = await new API().getPricingModels();\n\t\tctx.status = 200;\n\t\tctx.body = pricingModels;\n\t})\n\t.post('/pricing-models', async (ctx, next) => {\n\t\tconst pricingModel = ctx.request.body;\n\t\ttry {\n\t\t\tconst response = await new API().createPricingModel(pricingModel);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 201;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.get('/pricing-models/:pricingModelID', async (ctx, next) => {\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\ttry {\n\t\t\tconst pricingModel = await new API().getPricingModel(pricingModelID);\n\t\t\tctx.body = pricingModel;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 404;\n\t\t}\n\t})\n\t.put('/pricing-models/:pricingModelID', async (ctx, next) => {\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\tconst pricingModelChanges = ctx.request.body;\n\t\ttry {\n\t\t\tconst pricingModel = await new API().updatePricingModel(pricingModelID, pricingModelChanges);\n\t\t\tctx.body = pricingModel;\n\t\t\tctx.status = 202;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.get('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\ttry {\n\t\t\tconst prices = await new API().getPricesForPricingModel(pricingModelID);\n\t\t\tctx.body = prices;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 404;\n\t\t}\n\t})\n\t.post('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\tconst newPrice = ctx.request.body;\n\t\ttry {\n\t\t\tconst response = await new API().createPricingForPricingModel(pricingModelID, newPrice);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 201;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.del('/pricing-models/:pricingModelID/prices/:priceID', async (ctx, next) => {\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\tconst pricingID = ctx.params.priceID;\n\t\ttry {\n\t\t\tconst response = await new API().deletePricingFromPricingModel(pricingModelID, pricingID);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.get('/machines/:machineID', async (ctx, next) => {\n\t\tconst machineID = ctx.params.machineID;\n\t\ttry {\n\t\t\tconst response = await new API().getMachine(machineID);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 404;\n\t\t}\n\t})\n\t.put('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n\t\tconst machineID = ctx.params.machineID;\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\ttry {\n\t\t\tconst response = await new API().setPricingForMachine(machineID, pricingModelID);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 202;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.del('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n\t\tconst machineID = ctx.params.machineID;\n\t\tconst pricingModelID = ctx.params.pricingModelID;\n\t\ttry {\n\t\t\tconst response = await new API().unsetPricingForMachine(machineID, pricingModelID);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 400;\n\t\t}\n\t})\n\t.get('/machines/:machineID/prices', async (ctx, next) => {\n\t\tconst machineID = ctx.params.machineID;\n\t\ttry {\n\t\t\tconst response = await new API().getPricingModelForMachine(machineID);\n\t\t\tctx.body = response;\n\t\t\tctx.status = 200;\n\t\t} catch (err) {\n\t\t\tctx.body = err;\n\t\t\tctx.status = 404;\n\t\t}\n\t});\n\n\nconst server = app\n\t.use(router.routes())\n\t.listen(PORT, () =>\n\t\tconsole.log(`Server listening on port ${PORT}`)\n\t);\n\nmodule.exports = server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635713543381
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/master/challenge-rest-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/master/challenge-rest-api\",\"filename\":\"/home/master/challenge-rest-api/src/controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/master/challenge-rest-api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/master/challenge-rest-api",
      "filename": "/home/master/challenge-rest-api/src/controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/master/challenge-rest-api",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/master/challenge-rest-api/src/controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/master/challenge-rest-api/src/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/master/challenge-rest-api/src",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable camelcase */\n\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\n\nconst machineData = require('./../machines.json');\n\nconst fs = require('fs');\n\nclass Controller {\n  // getting all price models for the system\n  async getPricingModels() {\n    // return all todos\n    return new Promise((resolve, _) => resolve(pricingData));\n  } // getting an individual pricing model\n\n\n  async getPricingModel(pricingModelID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let pricingModel;\n\n      if (pricingModelID) {\n        pricingModel = pricingData[pricingModelID];\n      } else {\n        // no id so default pricing\n        pricingModel = pricingData.default_pricing;\n      }\n\n      if (pricingModel) {\n        // return the pricing model\n        resolve(pricingModel);\n      } else {\n        // return an error\n        reject(`Pricing Model with id ${pricingModelID} not found `);\n      }\n    });\n  } // getting prices for an individual pricing model\n\n\n  async getPricesForPricingModel(pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricing model\n      try {\n        let pricingModel = await this.getPricingModel(pricingModelID);\n        resolve(pricingModel.pricing);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // creating a pricing model in the system\n\n\n  async createPricingModel(pricingModel) {\n    return new Promise(async (resolve, reject) => {\n      // Ensure pricing model is complete\n      if (!pricingModel.name) {\n        reject('Missing parameters: name (str)');\n      } else if (!pricingModel.pricing) {\n        reject('Missing parameters: pricing (arr)');\n      } else if (!pricingModel.pricing[0]) {\n        reject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n      }\n\n      for (let [i, pricing] of pricingModel.pricing.entries()) {\n        if (!pricing.price) {\n          reject(`Found an error: price (int) is missing in your pricing object ${i}`);\n        } else if (!pricing.name) {\n          reject(`Found an error: name (str) is missing in your pricing object ${i}`);\n        } else if (!pricing.value) {\n          reject(`Found an error: value (int) is missing in your pricing object ${i}`);\n        }\n      }\n\n      let pricingModelID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricingModel = {\n        id: pricingModelID,\n        ...pricingModel\n      };\n      pricingData[pricingModelID] = newPricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the new created todo\n\n        resolve(newPricingModel.id);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // adds a new price configuration for a pricing model\n\n\n  async createPricingForPricingModel(pricingModelID, newPrice) {\n    return new Promise(async (resolve, reject) => {\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      }\n\n      if (!newPrice.price) {\n        reject('Found an error: price (int) is missing in your pricing object');\n      } else if (!newPrice.name) {\n        reject('Found an error: name (str) is missing in your pricing object');\n      } else if (!newPrice.value) {\n        reject('Found an error: value (int) is missing in your pricing object');\n      }\n\n      let pricingID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricing = {\n        id: pricingID,\n        ...newPrice\n      }; // Add the pricing object to pricing model\n\n      pricingModel.pricing.push(newPricing);\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the pricing model\n\n        await resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // updating a pricing model\n\n\n  async updatePricingModel(pricingModelID, pricingModelChanges) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      } // if no name, return an error\n\n\n      if (!pricingModelChanges.name) {\n        reject('Missing parameters: name (str)');\n      } // pricing model only contains name as meta data\n\n\n      pricingModel.name = pricingModelChanges.name;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes a price configuration from a pricing model\n\n\n  async deletePricingFromPricingModel(pricingModelID, pricingID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      // get the pricingModel\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      }\n\n      let pricingToBeDeleted = pricingModel.pricing.find(pricing => pricing.id === parseInt(pricingID));\n\n      if (!pricingToBeDeleted) {\n        reject(`No pricing with id ${pricingID} found in pricing model id ${pricingModelID}`);\n      }\n\n      let pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted); // else, return a success message\n\n      pricingModel.pricing = pricingArray;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // getting an individual pricing model\n\n\n  async getMachine(machineID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let machine = machineData[machineID];\n\n      if (machine) {\n        // return the machine\n        resolve(machine);\n      } else {\n        // return an error\n        reject(`Machine with id ${machineID} not found`);\n      }\n    });\n  } // sets/updates the pricing model for an individual machine\n\n\n  async setPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      } // get the pricingModel\n\n\n      try {\n        await this.getPricingModel(pricingModelID); // does it exist???\n      } catch (err) {\n        reject(err);\n      } // else, update it by setting completed to true\n      // eslint-disable-next-line camelcase\n\n\n      machine.pricing_id = pricingModelID;\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes the pricing model from the machine (unsets it)\n\n\n  async unsetPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      }\n\n      if (machine.pricing_id === pricingModelID) {\n        machine.pricing_id = '';\n        resolve(machine);\n      } else {\n        reject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n      }\n\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // get the pricing model and price configurations set for a given machine\n\n\n  async getPricingModelForMachine(machineID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      }\n\n      let pricingModelID = machine.pricing_id;\n      let pricingModel;\n\n      if (!pricingModelID || pricingModelID === '') {\n        // default pricing\n        try {\n          pricingModel = await this.getPricingModel();\n        } catch (err) {\n          reject(err);\n        }\n      } else {\n        try {\n          pricingModel = await this.getPricingModel(pricingModelID);\n        } catch (err) {\n          reject(err);\n        }\n      } // return the pricing model\n\n\n      resolve(pricingModel);\n    });\n  }\n\n}\n\nmodule.exports = Controller;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "pricingData",
        "require",
        "machineData",
        "fs",
        "Controller",
        "getPricingModels",
        "Promise",
        "resolve",
        "_",
        "getPricingModel",
        "pricingModelID",
        "reject",
        "pricingModel",
        "default_pricing",
        "getPricesForPricingModel",
        "pricing",
        "err",
        "createPricingModel",
        "name",
        "i",
        "entries",
        "price",
        "value",
        "Math",
        "floor",
        "random",
        "newPricingModel",
        "id",
        "writeFileSync",
        "createPricingForPricingModel",
        "newPrice",
        "pricingID",
        "newPricing",
        "push",
        "updatePricingModel",
        "pricingModelChanges",
        "deletePricingFromPricingModel",
        "pricingToBeDeleted",
        "find",
        "parseInt",
        "pricingArray",
        "filter",
        "item",
        "getMachine",
        "machineID",
        "machine",
        "setPricingForMachine",
        "pricing_id",
        "unsetPricingForMachine",
        "getPricingModelForMachine",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "sourcesContent": [
        "/* eslint-disable camelcase */\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\nconst machineData = require('./../machines.json');\nconst fs = require('fs');\n\nclass Controller {\n\t// getting all price models for the system\n\tasync getPricingModels () {\n\t\t// return all todos\n\t\treturn new Promise((resolve, _) => resolve(pricingData));\n\t}\n\n\t// getting an individual pricing model\n\tasync getPricingModel (pricingModelID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet pricingModel;\n\t\t\tif (pricingModelID) {\n\t\t\t\tpricingModel = pricingData[pricingModelID];\n\t\t\t} else {\n\t\t\t\t// no id so default pricing\n\t\t\t\tpricingModel = pricingData.default_pricing;\n\t\t\t}\n\t\t\tif (pricingModel) {\n\t\t\t\t// return the pricing model\n\t\t\t\tresolve(pricingModel);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Pricing Model with id ${pricingModelID} not found `);\n\t\t\t}\n\t\t});\n\t}\n\n\t// getting prices for an individual pricing model\n\tasync getPricesForPricingModel (pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\ttry {\n\t\t\t\tlet pricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t\tresolve(pricingModel.pricing);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// creating a pricing model in the system\n\tasync createPricingModel (pricingModel) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// Ensure pricing model is complete\n\t\t\tif (!pricingModel.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t} else if (!pricingModel.pricing) {\n\t\t\t\treject('Missing parameters: pricing (arr)');\n\t\t\t} else if (!pricingModel.pricing[0]) {\n\t\t\t\treject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n\t\t\t}\n\t\t\tfor (let [i, pricing] of pricingModel.pricing.entries()) {\n\t\t\t\tif (!pricing.price) {\n\t\t\t\t\treject(`Found an error: price (int) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.name) {\n\t\t\t\t\treject(`Found an error: name (str) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.value) {\n\t\t\t\t\treject(`Found an error: value (int) is missing in your pricing object ${i}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet pricingModelID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricingModel = {\n\t\t\t\tid: pricingModelID,\n\t\t\t\t...pricingModel\n\t\t\t};\n\t\t\tpricingData[pricingModelID] = newPricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the new created todo\n\t\t\t    resolve(newPricingModel.id);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// adds a new price configuration for a pricing model\n\tasync createPricingForPricingModel (pricingModelID, newPrice) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tif (!newPrice.price) {\n\t\t\t\treject('Found an error: price (int) is missing in your pricing object');\n\t\t\t} else if (!newPrice.name) {\n\t\t\t\treject('Found an error: name (str) is missing in your pricing object');\n\t\t\t} else if (!newPrice.value) {\n\t\t\t\treject('Found an error: value (int) is missing in your pricing object');\n\t\t\t}\n\t\t\tlet pricingID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricing = {\n\t\t\t\tid: pricingID,\n\t\t\t\t...newPrice\n\t\t\t};\n\t\t\t// Add the pricing object to pricing model\n\t\t\tpricingModel.pricing.push(newPricing);\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the pricing model\n\t\t\t    await resolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// updating a pricing model\n\tasync updatePricingModel (pricingModelID, pricingModelChanges) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// if no name, return an error\n\t\t\tif (!pricingModelChanges.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t}\n\t\t\t// pricing model only contains name as meta data\n\t\t\tpricingModel.name = pricingModelChanges.name;\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes a price configuration from a pricing model\n\tasync deletePricingFromPricingModel (pricingModelID, pricingID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tlet pricingToBeDeleted = pricingModel.pricing.find((pricing) => pricing.id === parseInt(pricingID));\n\t\t\tif (!pricingToBeDeleted) {\n\t\t\t\treject(`No pricing with id ${pricingID} found in pricing model id ${pricingModelID}`);\n\t\t\t}\n\t\t\tlet pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted);\n\t\t\t// else, return a success message\n\t\t\tpricingModel.pricing = pricingArray;\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// getting an individual pricing model\n\tasync getMachine (machineID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet machine = machineData[machineID];\n\t\t\tif (machine) {\n\t\t\t\t// return the machine\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Machine with id ${machineID} not found`);\n\t\t\t}\n\t\t});\n\t}\n\n\t// sets/updates the pricing model for an individual machine\n\tasync setPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// get the pricingModel\n\t\t\ttry {\n\t\t\t\tawait this.getPricingModel(pricingModelID); // does it exist???\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// else, update it by setting completed to true\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tmachine.pricing_id = pricingModelID;\n\t\t\tmachineData[machineID] = machine;\n            \n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes the pricing model from the machine (unsets it)\n\tasync unsetPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tif (machine.pricing_id === pricingModelID) {\n\t\t\t\tmachine.pricing_id = '';\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n\t\t\t}\n\t\t\tmachineData[machineID] = machine;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\t// get the pricing model and price configurations set for a given machine\n\tasync getPricingModelForMachine (machineID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tlet pricingModelID = machine.pricing_id;\n\t\t\tlet pricingModel;\n\t\t\tif (!pricingModelID || pricingModelID === '') {\n\t\t\t\t// default pricing\n\t\t\t\ttry {\n\t\t\t\t\tpricingModel = await this.getPricingModel();\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the pricing model\n\t\t\tresolve(pricingModel);\n\t\t});\n\t}\n}\nmodule.exports = Controller;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635714204517
  }
}