{
  "{\"sourceRoot\":\"/home/master/challenge-rest-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/master/challenge-rest-api\",\"filename\":\"/home/master/challenge-rest-api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/master/challenge-rest-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/master/challenge-rest-api",
      "filename": "/home/master/challenge-rest-api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/master/challenge-rest-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/master/challenge-rest-api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/master/challenge-rest-api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/master/challenge-rest-api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _koa = _interopRequireDefault(require(\"koa\"));\n\nvar _koaRouter = _interopRequireDefault(require(\"koa-router\"));\n\nvar _koaBodyparser = _interopRequireDefault(require(\"koa-bodyparser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = new _koa.default();\nconst PORT = process.env.PORT || 1337;\nconst router = new _koaRouter.default();\n\nconst API = require(\"./controller\");\n\nrouter.use((0, _koaBodyparser.default)()).get('/', (ctx, next) => {\n  ctx.body = 'hello, welcome to the Polycade API';\n}).get('/pricing-models', async (ctx, next) => {\n  const pricingModels = await new API().getPricingModels();\n  ctx.body = pricingModels;\n}).post('/pricing-models', async (ctx, next) => {\n  const pricingModel = ctx.request.body;\n\n  try {\n    const response = await new API().createPricingModel(pricingModel);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).get('/pricing-models/:pricingModelID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const pricingModel = await new API().getPricingModel(pricingModelID);\n    ctx.body = pricingModel;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).put('/pricing-models/:pricingModelID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const pricingModelChanges = ctx.request.body;\n\n  try {\n    const pricingModel = await new API().updatePricingModel(pricingModelID, pricingModelChanges);\n    ctx.body = pricingModel;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).get('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const prices = await new API().getPricesForPricingModel(pricingModelID);\n    ctx.body = prices;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).post('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const newPrice = ctx.request.body;\n\n  try {\n    const response = await new API().createPricingForPricingModel(pricingModelID, newPrice);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).del('/pricing-models/:pricingModelID/prices/:priceID', async (ctx, next) => {\n  const pricingModelID = ctx.params.pricingModelID;\n  const pricingID = ctx.params.priceID;\n\n  try {\n    const response = await new API().deletePricingFromPricingModel(pricingModelID, pricingID);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).get('/machines/:machineID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n\n  try {\n    const response = await new API().getMachine(machineID);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).put('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const response = await new API().setPricingForMachine(machineID, pricingModelID);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).del('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n  const pricingModelID = ctx.params.pricingModelID;\n\n  try {\n    const response = await new API().unsetPricingForMachine(machineID, pricingModelID);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n}).get('/machines/:machineID/prices', async (ctx, next) => {\n  const machineID = ctx.params.machineID;\n\n  try {\n    const response = await new API().getPricingModelForMachine(machineID);\n    ctx.body = response;\n  } catch (err) {\n    ctx.body = err;\n  }\n});\napp.use(router.routes()).listen(PORT, () => console.log(`Server listening on port ${PORT}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "Koa",
        "PORT",
        "process",
        "env",
        "router",
        "Router",
        "API",
        "require",
        "use",
        "get",
        "ctx",
        "next",
        "body",
        "pricingModels",
        "getPricingModels",
        "post",
        "pricingModel",
        "request",
        "response",
        "createPricingModel",
        "err",
        "pricingModelID",
        "params",
        "getPricingModel",
        "put",
        "pricingModelChanges",
        "updatePricingModel",
        "prices",
        "getPricesForPricingModel",
        "newPrice",
        "createPricingForPricingModel",
        "del",
        "pricingID",
        "priceID",
        "deletePricingFromPricingModel",
        "machineID",
        "getMachine",
        "setPricingForMachine",
        "unsetPricingForMachine",
        "getPricingModelForMachine",
        "routes",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "sourcesContent": [
        "import Koa from 'koa'\nimport Router from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\n\nconst app = new Koa()\nconst PORT = process.env.PORT || 1337\nconst router = new Router()\nconst API = require(\"./controller\");\n\nrouter\n  .use(bodyParser())\n  .get('/', (ctx, next) => {\n    ctx.body = 'hello, welcome to the Polycade API'\n  })\n  .get('/pricing-models', async (ctx, next) => {\n    \n    const pricingModels = await new API().getPricingModels();\n    ctx.body = pricingModels;\n  })\n  .post('/pricing-models', async (ctx, next) => {\n    const pricingModel = ctx.request.body;\n    try {\n      const response = await new API().createPricingModel(pricingModel);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .get('/pricing-models/:pricingModelID', async (ctx, next) => {\n    const pricingModelID = ctx.params.pricingModelID;\n    try {\n      const pricingModel = await new API().getPricingModel(pricingModelID);\n      ctx.body = pricingModel;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .put('/pricing-models/:pricingModelID', async (ctx, next) => {\n    const pricingModelID = ctx.params.pricingModelID;\n    const pricingModelChanges = ctx.request.body;\n    try {\n      const pricingModel = await new API().updatePricingModel(pricingModelID, pricingModelChanges);\n      ctx.body = pricingModel;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .get('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n    const pricingModelID = ctx.params.pricingModelID;\n    try {\n      const prices = await new API().getPricesForPricingModel(pricingModelID);\n      ctx.body = prices;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .post('/pricing-models/:pricingModelID/prices', async (ctx, next) => {\n    const pricingModelID = ctx.params.pricingModelID;\n    const newPrice = ctx.request.body;\n    try {\n      const response = await new API().createPricingForPricingModel(pricingModelID, newPrice);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .del('/pricing-models/:pricingModelID/prices/:priceID', async (ctx, next) => {\n    const pricingModelID = ctx.params.pricingModelID;\n    const pricingID = ctx.params.priceID;\n    try {\n      const response = await new API().deletePricingFromPricingModel(pricingModelID, pricingID);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .get('/machines/:machineID', async (ctx, next) => {\n    const machineID = ctx.params.machineID;\n    try {\n      const response = await new API().getMachine(machineID);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .put('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n    const machineID = ctx.params.machineID;\n    const pricingModelID = ctx.params.pricingModelID;\n    try {\n      const response = await new API().setPricingForMachine(machineID, pricingModelID);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .del('/machines/:machineID/prices/:pricingModelID', async (ctx, next) => {\n    const machineID = ctx.params.machineID;\n    const pricingModelID = ctx.params.pricingModelID;\n    try {\n      const response = await new API().unsetPricingForMachine(machineID, pricingModelID);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n  .get('/machines/:machineID/prices', async (ctx, next) => {\n    const machineID = ctx.params.machineID;\n    try {\n      const response = await new API().getPricingModelForMachine(machineID);\n      ctx.body = response;\n    } catch (err) {\n      ctx.body = err;\n    }\n  })\n\n\napp\n  .use(router.routes())\n  .listen(PORT, () =>\n    console.log(`Server listening on port ${PORT}`)\n  )\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635704202686
  },
  "{\"sourceRoot\":\"/home/master/challenge-rest-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/master/challenge-rest-api\",\"filename\":\"/home/master/challenge-rest-api/src/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/master/challenge-rest-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/master/challenge-rest-api",
      "filename": "/home/master/challenge-rest-api/src/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/master/challenge-rest-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/master/challenge-rest-api/src/controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/master/challenge-rest-api/src/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/master/challenge-rest-api/src",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable camelcase */\n\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\n\nconst machineData = require('./../machines.json');\n\nconst fs = require('fs');\n\nclass Controller {\n  // getting all price models for the system\n  async getPricingModels() {\n    // return all todos\n    return new Promise((resolve, _) => resolve(pricingData));\n  } // getting an individual pricing model\n\n\n  async getPricingModel(pricingModelID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let pricingModel = pricingData[pricingModelID];\n\n      if (pricingModel) {\n        // return the pricing model\n        resolve(pricingModel);\n      } else {\n        // return an error\n        reject(`Pricing Model with id ${pricingModelID} not found `);\n      }\n    });\n  } // getting prices for an individual pricing model\n\n\n  async getPricesForPricingModel(pricingModelID) {\n    return new Promise((resolve, reject) => {\n      // get the todo\n      let pricingModel = pricingData[pricingModelID];\n\n      if (pricingModel) {\n        // return the todo\n        resolve(pricingModel.pricing);\n      } else {\n        // return an error\n        reject(`Pricing Model with id ${pricingModelID}} not found `);\n      }\n    });\n  } // creating a pricing model in the system\n\n\n  async createPricingModel(pricingModel) {\n    return new Promise(async (resolve, reject) => {\n      // Ensure pricing model is complete\n      if (!pricingModel.name) {\n        reject('Missing parameters: name (str)');\n      } else if (!pricingModel.pricing) {\n        reject('Missing parameters: pricing (arr)');\n      } else if (!pricingModel.pricing[0]) {\n        reject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n      }\n\n      for (let [i, pricing] of pricingModel.pricing.entries()) {\n        if (!pricing.price) {\n          reject(`Found an error: price (int) is missing in your pricing object ${i}`);\n        } else if (!pricing.name) {\n          reject(`Found an error: name (str) is missing in your pricing object ${i}`);\n        } else if (!pricing.value) {\n          reject(`Found an error: value (int) is missing in your pricing object ${i}`);\n        }\n      }\n\n      let pricingModelID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricingModel = {\n        id: pricingModelID,\n        ...pricingModel\n      };\n      pricingData[pricingModelID] = newPricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the new created todo\n\n        resolve(newPricingModel.id);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // adds a new price configuration for a pricing model\n\n\n  async createPricingForPricingModel(pricingModelID, newPrice) {\n    return new Promise(async (resolve, reject) => {\n      let pricingModel = pricingData[pricingModelID];\n\n      if (!pricingModel) {\n        reject(`No pricing model with id ${pricingModelID} found`);\n      } else if (!newPrice.price) {\n        reject('Found an error: price (int) is missing in your pricing object');\n      } else if (!newPrice.name) {\n        reject('Found an error: name (str) is missing in your pricing object');\n      } else if (!newPrice.value) {\n        reject('Found an error: value (int) is missing in your pricing object');\n      }\n\n      let pricingID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricing = {\n        id: pricingID,\n        ...newPrice\n      }; // Add the pricing object to pricing model\n\n      pricingModel.pricing.push(newPricing);\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the pricing model\n\n        await resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // updating a pricing model\n\n\n  async updatePricingModel(pricingModelID, pricingModelChanges) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      let pricingModel = pricingData[pricingModelID]; // if no pricingModel, return an error\n\n      if (!pricingModel) {\n        reject(`No pricing model with id ${pricingModelID} found`);\n      } else if (!pricingModelChanges.name) {\n        reject('Missing parameters: name (str)');\n      } // pricing model only contains name as meta data\n\n\n      pricingModel.name = pricingModelChanges.name;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes a price configuration from a pricing model\n\n\n  async deletePricingFromPricingModel(pricingModelID, pricingID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      let pricingModel = pricingData[pricingModelID]; // if no pricingModel, return an error\n\n      if (!pricingModel) {\n        reject(`No pricing model with id ${pricingModelID} found`);\n      }\n\n      let pricingToBeDeleted = pricingModel.pricing.find(pricing => pricing.id === parseInt(pricingID));\n\n      if (!pricingToBeDeleted) {\n        reject(`No pricing with id ${pricingID} found`);\n      }\n\n      let pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted); // else, return a success message\n\n      pricingModel.pricing = pricingArray;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // getting an individual pricing model\n\n\n  async getMachine(machineID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let machine = machineData[machineID];\n\n      if (machine) {\n        // return the machine\n        resolve(machine);\n      } else {\n        // return an error\n        reject(`Machine with id ${machineID} not found`);\n      }\n    });\n  } // sets/updates the pricing model for an individual machine\n\n\n  async setPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      let machine = this.getMachine(machineID); // if no machine, return an error\n\n      if (!machine) {\n        reject(`No machine with id ${machineID} found`);\n      }\n\n      let pricingModel = this.getPricingModel(pricingModelID); // if no pricing, return an error\n\n      if (!pricingModel) {\n        reject(`No pricing model with id ${pricingModelID} found`);\n      } // else, update it by setting completed to true\n      // eslint-disable-next-line camelcase\n\n\n      machine.pricing_id = pricingModelID;\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes the pricing model from the machine (unsets it)\n\n\n  async unsetPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      // get the machine\n      let machine = this.getMachine(machineID); // if no machine, return an error\n\n      if (!machine) {\n        reject(`No machine with id ${machineID} found`);\n      }\n\n      if (machine.pricing_id === pricingModelID) {\n        machine.pricing_id = '';\n        resolve(machine);\n      } else {\n        reject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n      }\n\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // get the pricing model and price configurations set for a given machine\n\n\n  async getPricingModelForMachine(machineID) {\n    return new Promise((resolve, reject) => {\n      // get the machine\n      let machine = this.getMachine(machineID); // if no machine, return an error\n\n      if (!machine) {\n        reject(`No machine with id ${machineID} found`);\n      }\n\n      let pricingModelID = machine.pricing_id;\n      let pricingModel;\n\n      if (!pricingModelID || pricingModelID === '') {\n        // default pricing\n        pricingModel = pricingData.default_pricing;\n      } else {\n        pricingModel = pricingData[pricingModelID];\n      } // return the pricing model\n\n\n      resolve(pricingModel);\n    });\n  }\n\n}\n\nmodule.exports = Controller;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "pricingData",
        "require",
        "machineData",
        "fs",
        "Controller",
        "getPricingModels",
        "Promise",
        "resolve",
        "_",
        "getPricingModel",
        "pricingModelID",
        "reject",
        "pricingModel",
        "getPricesForPricingModel",
        "pricing",
        "createPricingModel",
        "name",
        "i",
        "entries",
        "price",
        "value",
        "Math",
        "floor",
        "random",
        "newPricingModel",
        "id",
        "writeFileSync",
        "err",
        "createPricingForPricingModel",
        "newPrice",
        "pricingID",
        "newPricing",
        "push",
        "updatePricingModel",
        "pricingModelChanges",
        "deletePricingFromPricingModel",
        "pricingToBeDeleted",
        "find",
        "parseInt",
        "pricingArray",
        "filter",
        "item",
        "getMachine",
        "machineID",
        "machine",
        "setPricingForMachine",
        "pricing_id",
        "unsetPricingForMachine",
        "getPricingModelForMachine",
        "default_pricing",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "sourcesContent": [
        "/* eslint-disable camelcase */\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\nconst machineData = require('./../machines.json');\nconst fs = require('fs');\n\nclass Controller {\n\t// getting all price models for the system\n\tasync getPricingModels () {\n\t\t// return all todos\n\t\treturn new Promise((resolve, _) => resolve(pricingData));\n\t}\n\n\t// getting an individual pricing model\n\tasync getPricingModel (pricingModelID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet pricingModel = pricingData[pricingModelID];\n\t\t\tif (pricingModel) {\n\t\t\t\t// return the pricing model\n\t\t\t\tresolve(pricingModel);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Pricing Model with id ${pricingModelID} not found `);\n\t\t\t}\n\t\t});\n\t}\n\n\t// getting prices for an individual pricing model\n\tasync getPricesForPricingModel (pricingModelID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the todo\n\t\t\tlet pricingModel = pricingData[pricingModelID];\n\t\t\tif (pricingModel) {\n\t\t\t\t// return the todo\n\t\t\t\tresolve(pricingModel.pricing);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Pricing Model with id ${pricingModelID}} not found `);\n\t\t\t}\n\t\t});\n\t}\n\n\t// creating a pricing model in the system\n\tasync createPricingModel (pricingModel) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// Ensure pricing model is complete\n\t\t\tif (!pricingModel.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t} else if (!pricingModel.pricing) {\n\t\t\t\treject('Missing parameters: pricing (arr)');\n\t\t\t} else if (!pricingModel.pricing[0]) {\n\t\t\t\treject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n\t\t\t}\n\t\t\tfor (let [i, pricing] of pricingModel.pricing.entries()) {\n\t\t\t\tif (!pricing.price) {\n\t\t\t\t\treject(`Found an error: price (int) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.name) {\n\t\t\t\t\treject(`Found an error: name (str) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.value) {\n\t\t\t\t\treject(`Found an error: value (int) is missing in your pricing object ${i}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet pricingModelID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricingModel = {\n\t\t\t\tid: pricingModelID,\n\t\t\t\t...pricingModel\n\t\t\t};\n\t\t\tpricingData[pricingModelID] = newPricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the new created todo\n\t\t\t    resolve(newPricingModel.id);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// adds a new price configuration for a pricing model\n\tasync createPricingForPricingModel (pricingModelID, newPrice) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet pricingModel = pricingData[pricingModelID];\n\t\t\tif (!pricingModel) {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found`);\n\t\t\t} else if (!newPrice.price) {\n\t\t\t\treject('Found an error: price (int) is missing in your pricing object');\n\t\t\t} else if (!newPrice.name) {\n\t\t\t\treject('Found an error: name (str) is missing in your pricing object');\n\t\t\t} else if (!newPrice.value) {\n\t\t\t\treject('Found an error: value (int) is missing in your pricing object');\n\t\t\t}\n            let pricingID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricing = {\n\t\t\t\tid: pricingID,\n\t\t\t\t...newPrice\n\t\t\t};\n\t\t\t// Add the pricing object to pricing model\n\t\t\tpricingModel.pricing.push(newPricing);\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the pricing model\n\t\t\t    await resolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// updating a pricing model\n\tasync updatePricingModel (pricingModelID, pricingModelChanges) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel = pricingData[pricingModelID];\n\t\t\t// if no pricingModel, return an error\n\t\t\tif (!pricingModel) {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found`);\n\t\t\t} else if (!pricingModelChanges.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t}\n\t\t\t// pricing model only contains name as meta data\n\t\t\tpricingModel.name = pricingModelChanges.name;\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes a price configuration from a pricing model\n\tasync deletePricingFromPricingModel (pricingModelID, pricingID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel = pricingData[pricingModelID];\n\t\t\t// if no pricingModel, return an error\n\t\t\tif (!pricingModel) {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found`);\n\t\t\t}\n\t\t\tlet pricingToBeDeleted = pricingModel.pricing.find((pricing) => pricing.id === parseInt(pricingID));\n\t\t\tif (!pricingToBeDeleted) {\n\t\t\t\treject(`No pricing with id ${pricingID} found`);\n\t\t\t}\n\t\t\tlet pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted);\n\t\t\t// else, return a success message\n\t\t\tpricingModel.pricing = pricingArray;\n            pricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n    // getting an individual pricing model\n\tasync getMachine (machineID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet machine = machineData[machineID];\n\t\t\tif (machine) {\n\t\t\t\t// return the machine\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Machine with id ${machineID} not found`);\n\t\t\t}\n\t\t});\n\t}\n\n\t// sets/updates the pricing model for an individual machine\n\tasync setPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\tlet machine = this.getMachine(machineID);\n\t\t\t// if no machine, return an error\n\t\t\tif (!machine) {\n\t\t\t\treject(`No machine with id ${machineID} found`);\n\t\t\t}\n\t\t\tlet pricingModel = this.getPricingModel(pricingModelID);\n\t\t\t// if no pricing, return an error\n\t\t\tif (!pricingModel) {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found`);\n\t\t\t}\n\t\t\t// else, update it by setting completed to true\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tmachine.pricing_id = pricingModelID;\n\t\t\tmachineData[machineID] = machine;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes the pricing model from the machine (unsets it)\n\tasync unsetPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the machine\n\t\t\tlet machine = this.getMachine(machineID);\n\t\t\t// if no machine, return an error\n\t\t\tif (!machine) {\n\t\t\t\treject(`No machine with id ${machineID} found`);\n\t\t\t}\n\t\t\tif (machine.pricing_id === pricingModelID) {\n\t\t\t\tmachine.pricing_id = '';\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n\t\t\t}\n            machineData[machineID] = machine;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\t// get the pricing model and price configurations set for a given machine\n\tasync getPricingModelForMachine (machineID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the machine\n\t\t\tlet machine = this.getMachine(machineID);\n\t\t\t// if no machine, return an error\n\t\t\tif (!machine) {\n\t\t\t\treject(`No machine with id ${machineID} found`);\n\t\t\t}\n\t\t\tlet pricingModelID = machine.pricing_id;\n\t\t\tlet pricingModel;\n\t\t\tif (!pricingModelID || pricingModelID === '') {\n\t\t\t\t// default pricing\n\t\t\t\tpricingModel = pricingData.default_pricing;\n\n\t\t\t} else {\n\t\t\t\tpricingModel = pricingData[pricingModelID];\n\t\t\t}\n\t\t\t// return the pricing model\n\t\t\tresolve(pricingModel);\n\t\t});\n\t}\n}\nmodule.exports = Controller;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635704320045
  },
  "{\"sourceRoot\":\"/home/master/challenge-rest-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/master/challenge-rest-api\",\"filename\":\"/home/master/challenge-rest-api/src/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/master/challenge-rest-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/master/challenge-rest-api",
      "filename": "/home/master/challenge-rest-api/src/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/master/challenge-rest-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/master/challenge-rest-api/src/controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/master/challenge-rest-api/src/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/master/challenge-rest-api/src",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/* eslint-disable camelcase */\n\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\n\nconst machineData = require('./../machines.json');\n\nconst fs = require('fs');\n\nclass Controller {\n  // getting all price models for the system\n  async getPricingModels() {\n    // return all todos\n    return new Promise((resolve, _) => resolve(pricingData));\n  } // getting an individual pricing model\n\n\n  async getPricingModel(pricingModelID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let pricingModel;\n\n      if (pricingModelID) {\n        pricingModel = pricingData[pricingModelID];\n      } else {\n        // no id so default pricing\n        pricingModel = pricingData.default_pricing;\n      }\n\n      if (pricingModel) {\n        // return the pricing model\n        resolve(pricingModel);\n      } else {\n        // return an error\n        reject(`Pricing Model with id ${pricingModelID} not found `);\n      }\n    });\n  } // getting prices for an individual pricing model\n\n\n  async getPricesForPricingModel(pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricing model\n      try {\n        let pricingModel = await this.getPricingModel(pricingModelID);\n        resolve(pricingModel.pricing);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // creating a pricing model in the system\n\n\n  async createPricingModel(pricingModel) {\n    return new Promise(async (resolve, reject) => {\n      // Ensure pricing model is complete\n      if (!pricingModel.name) {\n        reject('Missing parameters: name (str)');\n      } else if (!pricingModel.pricing) {\n        reject('Missing parameters: pricing (arr)');\n      } else if (!pricingModel.pricing[0]) {\n        reject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n      }\n\n      for (let [i, pricing] of pricingModel.pricing.entries()) {\n        if (!pricing.price) {\n          reject(`Found an error: price (int) is missing in your pricing object ${i}`);\n        } else if (!pricing.name) {\n          reject(`Found an error: name (str) is missing in your pricing object ${i}`);\n        } else if (!pricing.value) {\n          reject(`Found an error: value (int) is missing in your pricing object ${i}`);\n        }\n      }\n\n      let pricingModelID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricingModel = {\n        id: pricingModelID,\n        ...pricingModel\n      };\n      pricingData[pricingModelID] = newPricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the new created todo\n\n        resolve(newPricingModel.id);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // adds a new price configuration for a pricing model\n\n\n  async createPricingForPricingModel(pricingModelID, newPrice) {\n    return new Promise(async (resolve, reject) => {\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      }\n\n      if (!newPrice.price) {\n        reject('Found an error: price (int) is missing in your pricing object');\n      } else if (!newPrice.name) {\n        reject('Found an error: name (str) is missing in your pricing object');\n      } else if (!newPrice.value) {\n        reject('Found an error: value (int) is missing in your pricing object');\n      }\n\n      let pricingID = Math.floor(4 + Math.random() * 10); // create a pricingModel, with random id and data sent\n\n      let newPricing = {\n        id: pricingID,\n        ...newPrice\n      }; // Add the pricing object to pricing model\n\n      pricingModel.pricing.push(newPricing);\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8'); // return the pricing model\n\n        await resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // updating a pricing model\n\n\n  async updatePricingModel(pricingModelID, pricingModelChanges) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      } // if no name, return an error\n\n\n      if (!pricingModelChanges.name) {\n        reject('Missing parameters: name (str)');\n      } // pricing model only contains name as meta data\n\n\n      pricingModel.name = pricingModelChanges.name;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes a price configuration from a pricing model\n\n\n  async deletePricingFromPricingModel(pricingModelID, pricingID) {\n    return new Promise(async (resolve, reject) => {\n      // get the pricingModel\n      // get the pricingModel\n      let pricingModel;\n\n      try {\n        pricingModel = await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      }\n\n      let pricingToBeDeleted = pricingModel.pricing.find(pricing => pricing.id === parseInt(pricingID));\n\n      if (!pricingToBeDeleted) {\n        reject(`No pricing with id ${pricingID} found in pricing model id ${pricingModelID}`);\n      }\n\n      let pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted); // else, return a success message\n\n      pricingModel.pricing = pricingArray;\n      pricingData[pricingModelID] = pricingModel;\n\n      try {\n        await fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n        resolve(pricingModel);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // getting an individual pricing model\n\n\n  async getMachine(machineID) {\n    return new Promise((resolve, reject) => {\n      // get the pricing model\n      let machine = machineData[machineID];\n\n      if (machine) {\n        // return the machine\n        resolve(machine);\n      } else {\n        // return an error\n        reject(`Machine with id ${machineID} not found`);\n      }\n    });\n  } // sets/updates the pricing model for an individual machine\n\n\n  async setPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      } // get the pricingModel\n\n\n      try {\n        await this.getPricingModel(pricingModelID);\n      } catch (err) {\n        reject(err);\n      } // else, update it by setting completed to true\n      // eslint-disable-next-line camelcase\n\n\n      machine.pricing_id = pricingModelID;\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // removes the pricing model from the machine (unsets it)\n\n\n  async unsetPricingForMachine(machineID, pricingModelID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      }\n\n      if (machine.pricing_id === pricingModelID) {\n        machine.pricing_id = '';\n        resolve(machine);\n      } else {\n        reject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n      }\n\n      machineData[machineID] = machine;\n\n      try {\n        await fs.writeFileSync('./../machine.json', machineData, 'utf8');\n        resolve(machine);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  } // get the pricing model and price configurations set for a given machine\n\n\n  async getPricingModelForMachine(machineID) {\n    return new Promise(async (resolve, reject) => {\n      let machine; // get the machine\n\n      try {\n        machine = await this.getMachine(machineID);\n      } catch (err) {\n        reject(err);\n      }\n\n      let pricingModelID = machine.pricing_id;\n      let pricingModel;\n\n      if (!pricingModelID || pricingModelID === '') {\n        // default pricing\n        try {\n          pricingModel = await this.getPricingModel();\n        } catch (err) {\n          reject(err);\n        }\n      } else {\n        try {\n          pricingModel = await this.getPricingModel(pricingModelID);\n        } catch (err) {\n          reject(err);\n        }\n      } // return the pricing model\n\n\n      resolve(pricingModel);\n    });\n  }\n\n}\n\nmodule.exports = Controller;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "pricingData",
        "require",
        "machineData",
        "fs",
        "Controller",
        "getPricingModels",
        "Promise",
        "resolve",
        "_",
        "getPricingModel",
        "pricingModelID",
        "reject",
        "pricingModel",
        "default_pricing",
        "getPricesForPricingModel",
        "pricing",
        "err",
        "createPricingModel",
        "name",
        "i",
        "entries",
        "price",
        "value",
        "Math",
        "floor",
        "random",
        "newPricingModel",
        "id",
        "writeFileSync",
        "createPricingForPricingModel",
        "newPrice",
        "pricingID",
        "newPricing",
        "push",
        "updatePricingModel",
        "pricingModelChanges",
        "deletePricingFromPricingModel",
        "pricingToBeDeleted",
        "find",
        "parseInt",
        "pricingArray",
        "filter",
        "item",
        "getMachine",
        "machineID",
        "machine",
        "setPricingForMachine",
        "pricing_id",
        "unsetPricingForMachine",
        "getPricingModelForMachine",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/master/challenge-rest-api/src",
      "sourcesContent": [
        "/* eslint-disable camelcase */\n/* eslint-disable radix */\n// controller.js\n// Logic behind the functionalities\nconst pricingData = require('./../prices.json');\nconst machineData = require('./../machines.json');\nconst fs = require('fs');\n\nclass Controller {\n\t// getting all price models for the system\n\tasync getPricingModels () {\n\t\t// return all todos\n\t\treturn new Promise((resolve, _) => resolve(pricingData));\n\t}\n\n\t// getting an individual pricing model\n\tasync getPricingModel (pricingModelID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet pricingModel;\n\t\t\tif (pricingModelID) {\n\t\t\t\tpricingModel = pricingData[pricingModelID];\n\t\t\t} else {\n\t\t\t\t// no id so default pricing\n\t\t\t\tpricingModel = pricingData.default_pricing;\n\t\t\t}\n\t\t\tif (pricingModel) {\n\t\t\t\t// return the pricing model\n\t\t\t\tresolve(pricingModel);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Pricing Model with id ${pricingModelID} not found `);\n\t\t\t}\n\t\t});\n\t}\n\n\t// getting prices for an individual pricing model\n\tasync getPricesForPricingModel (pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\ttry {\n\t\t\t\tlet pricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t\tresolve(pricingModel.pricing);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// creating a pricing model in the system\n\tasync createPricingModel (pricingModel) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// Ensure pricing model is complete\n\t\t\tif (!pricingModel.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t} else if (!pricingModel.pricing) {\n\t\t\t\treject('Missing parameters: pricing (arr)');\n\t\t\t} else if (!pricingModel.pricing[0]) {\n\t\t\t\treject('Please at least add one pricing object with the following keys: price (int), name (str), value (int)');\n\t\t\t}\n\t\t\tfor (let [i, pricing] of pricingModel.pricing.entries()) {\n\t\t\t\tif (!pricing.price) {\n\t\t\t\t\treject(`Found an error: price (int) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.name) {\n\t\t\t\t\treject(`Found an error: name (str) is missing in your pricing object ${i}`);\n\t\t\t\t} else if (!pricing.value) {\n\t\t\t\t\treject(`Found an error: value (int) is missing in your pricing object ${i}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet pricingModelID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricingModel = {\n\t\t\t\tid: pricingModelID,\n\t\t\t\t...pricingModel\n\t\t\t};\n\t\t\tpricingData[pricingModelID] = newPricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the new created todo\n\t\t\t    resolve(newPricingModel.id);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// adds a new price configuration for a pricing model\n\tasync createPricingForPricingModel (pricingModelID, newPrice) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tif (!newPrice.price) {\n\t\t\t\treject('Found an error: price (int) is missing in your pricing object');\n\t\t\t} else if (!newPrice.name) {\n\t\t\t\treject('Found an error: name (str) is missing in your pricing object');\n\t\t\t} else if (!newPrice.value) {\n\t\t\t\treject('Found an error: value (int) is missing in your pricing object');\n\t\t\t}\n\t\t\tlet pricingID = Math.floor(4 + Math.random() * 10);\n\t\t\t// create a pricingModel, with random id and data sent\n\t\t\tlet newPricing = {\n\t\t\t\tid: pricingID,\n\t\t\t\t...newPrice\n\t\t\t};\n\t\t\t// Add the pricing object to pricing model\n\t\t\tpricingModel.pricing.push(newPricing);\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\t// return the pricing model\n\t\t\t    await resolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// updating a pricing model\n\tasync updatePricingModel (pricingModelID, pricingModelChanges) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// if no name, return an error\n\t\t\tif (!pricingModelChanges.name) {\n\t\t\t\treject('Missing parameters: name (str)');\n\t\t\t}\n\t\t\t// pricing model only contains name as meta data\n\t\t\tpricingModel.name = pricingModelChanges.name;\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes a price configuration from a pricing model\n\tasync deletePricingFromPricingModel (pricingModelID, pricingID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\t// get the pricingModel\n\t\t\t// get the pricingModel\n\t\t\tlet pricingModel;\n\t\t\ttry {\n\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tlet pricingToBeDeleted = pricingModel.pricing.find((pricing) => pricing.id === parseInt(pricingID));\n\t\t\tif (!pricingToBeDeleted) {\n\t\t\t\treject(`No pricing with id ${pricingID} found in pricing model id ${pricingModelID}`);\n\t\t\t}\n\t\t\tlet pricingArray = pricingModel.pricing.filter(item => item !== pricingToBeDeleted);\n\t\t\t// else, return a success message\n\t\t\tpricingModel.pricing = pricingArray;\n\t\t\tpricingData[pricingModelID] = pricingModel;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../prices.json', pricingData, 'utf8');\n\t\t\t\tresolve(pricingModel);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// getting an individual pricing model\n\tasync getMachine (machineID) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get the pricing model\n\t\t\tlet machine = machineData[machineID];\n\t\t\tif (machine) {\n\t\t\t\t// return the machine\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\t// return an error\n\t\t\t\treject(`Machine with id ${machineID} not found`);\n\t\t\t}\n\t\t});\n\t}\n\n\t// sets/updates the pricing model for an individual machine\n\tasync setPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// get the pricingModel\n\t\t\ttry {\n\t\t\t\tawait this.getPricingModel(pricingModelID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\t// else, update it by setting completed to true\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tmachine.pricing_id = pricingModelID;\n\t\t\tmachineData[machineID] = machine;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// removes the pricing model from the machine (unsets it)\n\tasync unsetPricingForMachine (machineID, pricingModelID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tif (machine.pricing_id === pricingModelID) {\n\t\t\t\tmachine.pricing_id = '';\n\t\t\t\tresolve(machine);\n\t\t\t} else {\n\t\t\t\treject(`No pricing model with id ${pricingModelID} found for machine with id ${machineID}`);\n\t\t\t}\n\t\t\tmachineData[machineID] = machine;\n\t\t\ttry {\n\t\t\t\tawait fs.writeFileSync('./../machine.json', machineData, 'utf8');\n\t\t\t\tresolve(machine);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t}\n\t// get the pricing model and price configurations set for a given machine\n\tasync getPricingModelForMachine (machineID) {\n\t\treturn new Promise( async (resolve, reject) => {\n\t\t\tlet machine;\n\t\t\t// get the machine\n\t\t\ttry {\n\t\t\t\tmachine = await this.getMachine(machineID);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tlet pricingModelID = machine.pricing_id;\n\t\t\tlet pricingModel;\n\t\t\tif (!pricingModelID || pricingModelID === '') {\n\t\t\t\t// default pricing\n\t\t\t\ttry {\n\t\t\t\t\tpricingModel = await this.getPricingModel();\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tpricingModel = await this.getPricingModel(pricingModelID);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the pricing model\n\t\t\tresolve(pricingModel);\n\t\t});\n\t}\n}\nmodule.exports = Controller;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635706059183
  }
}